{
  "2.6.33": {
    "environment processes": {},
    "functions models": {
      "flush_delayed_work": {
        "actions": {
          "assign": {
            "comment": "Register",
            "trace relevant": true,
            "statements": [
              "%delayed_work% = $ARG1;"
            ]
          },
          "callback": {
            "callback": "%delayed_work.work_struct.func%",
            "comment": "Call the work callback.",
            "parameters": [
              "%delayed_work%"
            ]
          }
        },
        "comment": "Flush work.",
        "labels": {
          "delayed_work": {
            "container": true,
            "interface": [
              "workqueue.delayed_work"
            ],
            "parameter": true
          }
        },
        "process": "<assign>.[callback]"
      },
      "schedule_delayed_work": {
        "actions": {
          "assign": {
            "comment": "Register",
            "statements": [
              "%delayed_work% = $ARG1;"
            ]
          },
          "callback": {
            "callback": "%delayed_work.work_struct.func%",
            "comment": "Call the work callback.",
            "parameters": [
              "%delayed_work%"
            ]
          },
          "fail": {
            "comment": "Failed to flush the work.",
            "statements": [
              "return false;"
            ]
          },
          "success": {
            "comment": "Successfully flushed the work.",
            "statements": [
              "return true;"
            ]
          }
        },
        "comment": "Flush work.",
        "labels": {
          "delayed_work": {
            "container": true,
            "interface": [
              "workqueue.delayed_work"
            ],
            "parameter": true
          }
        },
        "process": "<assign>.[callback].<success> | <fail>"
      }
    }
  },
  "3.14": {
    "environment processes": {},
    "functions models": {
      "flush_work, schedule_work": {
        "actions": {
          "assign": {
            "comment": "Register",
            "statements": [
              "%work_struct% = $ARG1;"
            ]
          },
          "callback": {
            "callback": "%work_struct.func%",
            "comment": "Call the work callback.",
            "parameters": [
              "%work_struct%"
            ],
            "post-call": [
              "ldv_switch_out_context_for_schedule();"
            ],
            "pre-call": [
              "ldv_switch_to_context_for_schedule();"
            ]
          },
          "fail": {
            "comment": "Failed to flush the work.",
            "statements": [
              "return false;"
            ]
          },
          "success": {
            "comment": "Successfully flushed the work.",
            "statements": [
              "return true;"
            ]
          }
        },
        "comment": "Flush work.",
        "labels": {
          "work_struct": {
            "container": true,
            "interface": [
              "workqueue.work_struct"
            ],
            "parameter": true
          }
        },
        "process": "<assign>.[callback].<success> | <fail>",
        "reference": true
      },
      "queue_delayed_work, schedule_delayed_work_on": {
        "actions": {
          "assign": {
            "comment": "Get the work structure from arguments.",
            "statements": [
              "%delayed_work% = $ARG2;"
            ]
          },
          "callback": {
            "callback": "%delayed_work.work_struct.func%",
            "comment": "Call the work callback.",
            "parameters": [
              "%delayed_work%"
            ]
          },
          "fail": {
            "comment": "Queueing the delayed work has failed.",
            "statements": [
              "return false;"
            ]
          },
          "success": {
            "comment": "Queueing the delayed work has finished successfully.",
            "statements": [
              "return true;"
            ]
          }
        },
        "comment": "Queue delayed work on.",
        "labels": {
          "delayed_work": {
            "container": true,
            "interface": [
              "workqueue.delayed_work"
            ],
            "parameter": true
          }
        },
        "process": "<assign>.[callback].<success> | <fail>",
        "reference": true
      },
      "queue_delayed_work_on": {
        "actions": {
          "assign": {
            "comment": "Get the work structure from arguments.",
            "statements": [
              "%delayed_work% = $ARG3;"
            ]
          },
          "callback": {
            "callback": "%delayed_work.work_struct.func%",
            "comment": "Call the work callback.",
            "parameters": [
              "%delayed_work%"
            ]
          },
          "fail": {
            "comment": "Queueing the delayed work has failed.",
            "statements": [
              "return false;"
            ]
          },
          "success": {
            "comment": "Queueing the delayed work has finished successfully.",
            "statements": [
              "return true;"
            ]
          }
        },
        "comment": "Queue delayed work on.",
        "labels": {
          "delayed_work": {
            "container": true,
            "interface": [
              "workqueue.delayed_work"
            ],
            "parameter": true
          }
        },
        "process": "<assign>.[callback].<success> | <fail>",
        "reference": true
      },
      "queue_work": {
        "actions": {
          "assign": {
            "comment": "Get the work structure from arguments.",
            "statements": [
              "%work_struct% = $ARG2;"
            ]
          },
          "callback": {
            "callback": "%work_struct.func%",
            "comment": "Call the work callback.",
            "parameters": [
              "%work_struct%"
            ]
          },
          "fail": {
            "comment": "Failed to queue the work on a workqueue.",
            "statements": [
              "return false;"
            ]
          },
          "success": {
            "comment": "Successfully queued the work on a workqueue.",
            "statements": [
              "return true;"
            ]
          }
        },
        "comment": "Queue work on a workqueue.",
        "labels": {
          "work_struct": {
            "container": true,
            "interface": [
              "workqueue.work_struct"
            ],
            "parameter": true
          }
        },
        "process": "<assign>.[callback].<success> | <fail>",
        "reference": true
      },
      "queue_work_on": {
        "actions": {
          "assign": {
            "comment": "Get the work structure from arguments.",
            "statements": [
              "%work_struct% = $ARG3;"
            ]
          },
          "callback": {
            "callback": "%work_struct.func%",
            "comment": "Call the work callback.",
            "parameters": [
              "%work_struct%"
            ]
          },
          "fail": {
            "comment": "Failed to queue the work on a workqueue.",
            "statements": [
              "return false;"
            ]
          },
          "success": {
            "comment": "Successfully queued the work on a workqueue.",
            "statements": [
              "return true;"
            ]
          }
        },
        "comment": "Queue work on a workqueue.",
        "labels": {
          "work_struct": {
            "container": true,
            "interface": [
              "workqueue.work_struct"
            ],
            "parameter": true
          }
        },
        "process": "<assign>.[callback].<success> | <fail>",
        "reference": true
      },
      "schedule_delayed_work, flush_delayed_work": {
        "actions": {
          "assign": {
            "comment": "Register",
            "statements": [
              "%delayed_work% = $ARG1;"
            ]
          },
          "callback": {
            "callback": "%delayed_work.work_struct.func%",
            "comment": "Call the work callback.",
            "parameters": [
              "%delayed_work%"
            ]
          },
          "fail": {
            "comment": "Failed to flush the work.",
            "statements": [
              "return false;"
            ]
          },
          "success": {
            "comment": "Successfully flushed the work.",
            "statements": [
              "return true;"
            ]
          }
        },
        "comment": "Flush work.",
        "labels": {
          "delayed_work": {
            "container": true,
            "interface": [
              "workqueue.delayed_work"
            ],
            "parameter": true
          }
        },
        "process": "<assign>.[callback].<success> | <fail>",
        "reference": true
      }
    }
  }
}